Project Description:

Amazon Elastic Compute Cloud (Amazon EC2) provides scalable computing
capacity in the Amazon Web Services (AWS) cloud. Using Amazon EC2
eliminates your need to invest in hardware up front so you can develop and
deploy applications faster. You can use Amazon EC2 to launch as many or as
few virtual servers as you need, configure security and networking, and manage
storage. Amazon EC2 enables you to scale up or down to handle changes in
requirements or spikes in popularity, reducing your need to forecast traffic.


Problem Statement:


Company ABC wants to move their product to AWS. They have the following
things set up right now:
1. MySQL DB
2. Website (PHP)
The company wants high availability on this product, therefore wants Auto
Scaling to be enabled on this website

Solution:

-> Created a VPC MTproject wuth 2 subnet CIDR(120.40.0.0/16)

-> Create 2 subnet in differnt avalibility zone(MTpublic(east-1a) and MTpublic2(east-1b))

-> Make the subnet public -> Select the subnet -> Actions -> edit subnet settings -> Enable auto-assign public IPv4 address

-> create internet gateways and attach it to VPC

-> Create route table -> Add IGW to routes and add both the subnets in the subnet assocaitions 

-> Launch an instance for server and associate it with the created VPC

-> Install apache to make it a webserver

sudo apt-get update
sudo apt-get install apache2

-> Transfer the code from the local machine to instance

Open terminal in local machine(Windows) 

scp -i "C:\Users\sarfr\Downloads\mykey.pem" "C:\Users\sarfr\Downloads\code\1243\index.php" ubuntu@44.201.237.172:/home/ubuntu


scp -r -i "C:\Users\sarfr\Downloads\mykey.pem" "C:\Users\sarfr\Downloads\code\1243\images" ubuntu@44.201.237.172:/home/ubuntu

-> edit the webpage code 

cd /var/www/html

sudo rm index.html

sudo mv index.php images/ /var/www/html

Install the dependenicies required to run the webpage

sudo add-apt-repository -y ppa:ondrej/php

-> Create a database in the VPC created with MYSQL and the SG of the EC2 

-> Provide the connection details in the index.php file

Copy the Endpoint in the servername tag in the p.php file
Enter the username, password 

-> Creating the RDS table for the data to get inserted

mysql -h mtproject.cxgfgdvsfiny.us-east-1.rds.amazonaws.com -u admin -pintel123

show databases;

use intel;

create table data(firstname varchar(20),email varchar(25));

Load balancing:

-> Create a target group for the server instance

-> Create a load balancer with the target group created

-> stop the website being accessed from instance IP 

In the instance security group add the SG of the load balancer 

Creating auto scaling for high avalibility:

-> Create an image of the server instance

-> create a launch configuration for auto scaling with the same SG as the instance server -> select the minimum capacity as 2 

Screenshots attached in the .zip


 











